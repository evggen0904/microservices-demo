version: '3.7'
services:
  twitter-to-kafka-service:
    image: ${GROUP_ID}/twitter.to.kafka.service:${SERVICE_VERSION:-latest}
    container_name: twitter-to-kafka-service
    ports:
      - "5005:5005"
    volumes:
      - "./docker-logs:/workspace/twitter-to-kafka-service/logs"
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 -Xms128m -Xmx256m"
      - "KAFKA-CONFIG_BOOTSTRAP-SERVERS=kafka1:29092"
      - "KAFKA-CONFIG_SCHEMA-REGISTRY-URL=http://schema-registry:8081"
      - "SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888"
    networks:
      - ${GLOBAL_NETWORK:-kafka}
    restart: on-failure
  kafka-to-elastic:
    image: ${GROUP_ID}/kafka-to-elastic:1.0
    container_name: kafka-to-elastic
    depends_on:
      - twitter-to-kafka-service
    ports:
      - "8182:8182"
    volumes:
      - "./docker-logs:/workspace/kafka-to-elastic/logs"
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5006 -Xms128m -Xmx256m"
      - "KAFKA-CONFIG_BOOTSTRAP-SERVERS=kafka1:29092"
      - "KAFKA-CONFIG_SCHEMA-REGISTRY-URL=http://schema-registry:8081"
      - "SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888"
      - "ELASTIC-CONFIG_CONNECTION-URL=elastic-1:9200"
    networks:
      - ${GLOBAL_NETWORK:-kafka}
    restart: on-failure